# See absl/copts/copts.py and absl/copts/generate_copts.py
include(GENERATED_QianCopts)

set(QIAN_LSAN_LINKOPTS "")
set(QIAN_HAVE_LSAN OFF)
set(QIAN_DEFAULT_LINKOPTS "")

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  set(QIAN_DEFAULT_COPTS "${QIAN_GCC_FLAGS}")
  set(QIAN_TEST_COPTS "${QIAN_GCC_FLAGS};${QIAN_GCC_TEST_FLAGS}")
  set(QIAN_RANDOM_RANDEN_COPTS "${QIAN_RANDOM_HWAES_X64_FLAGS}")
elseif("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang")
  # MATCHES so we get both Clang and AppleClang
  if(MSVC)
    # clang-cl is half MSVC, half LLVM
    set(QIAN_DEFAULT_COPTS "${QIAN_CLANG_CL_FLAGS}")
    set(QIAN_TEST_COPTS "${QIAN_CLANG_CL_FLAGS};${QIAN_CLANG_CL_TEST_FLAGS}")
    set(QIAN_DEFAULT_LINKOPTS "${QIAN_MSVC_LINKOPTS}")
    set(QIAN_RANDOM_RANDEN_COPTS "${QIAN_RANDOM_HWAES_MSVC_X64_FLAGS}")
  else()
    set(QIAN_DEFAULT_COPTS "${QIAN_LLVM_FLAGS}")
    set(QIAN_TEST_COPTS "${QIAN_LLVM_FLAGS};${QIAN_LLVM_TEST_FLAGS}")
    set(QIAN_RANDOM_RANDEN_COPTS "${QIAN_RANDOM_HWAES_X64_FLAGS}")
    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
      # AppleClang doesn't have lsan
      # https://developer.apple.com/documentation/code_diagnostics
      if(NOT CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.5)
        set(QIAN_LSAN_LINKOPTS "-fsanitize=leak")
        set(QIAN_HAVE_LSAN ON)
      endif()
    endif()
  endif()
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  set(QIAN_DEFAULT_COPTS "${QIAN_MSVC_FLAGS}")
  set(QIAN_TEST_COPTS "${QIAN_MSVC_FLAGS};${QIAN_MSVC_TEST_FLAGS}")
  set(QIAN_DEFAULT_LINKOPTS "${QIAN_MSVC_LINKOPTS}")
  set(QIAN_RANDOM_RANDEN_COPTS "${QIAN_RANDOM_HWAES_MSVC_X64_FLAGS}")
else()
  message(WARNING "Unknown compiler: ${CMAKE_CXX_COMPILER}.  Building with no default flags")
  set(QIAN_DEFAULT_COPTS "")
  set(QIAN_TEST_COPTS "")
  set(QIAN_RANDOM_RANDEN_COPTS "")
endif()

if("${CMAKE_CXX_STANDARD}" EQUAL 98)
  message(FATAL_ERROR "Abseil requires at least C++11")
elseif(NOT "${CMAKE_CXX_STANDARD}")
  message(STATUS "No CMAKE_CXX_STANDARD set, assuming 11")
  set(QIAN_CXX_STANDARD 11)
else()
  set(QIAN_CXX_STANDARD "${CMAKE_CXX_STANDARD}")
endif()
